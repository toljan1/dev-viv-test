{"version":3,"file":"static/js/128.6cda3946.chunk.js","mappings":"2JAEO,IAAMA,EAAoB,SAACC,GAAgB,OAAKA,EAAMD,iBAAkB,EAClEE,EAAe,SAACD,GAAgB,OAAKA,EAAMC,YAAa,C,wGCsErE,WAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAQ,MAA/B,EAjEwB,WACtB,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA8DL,EAAAA,EAAAA,UAE5D,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFAE,EAAuBD,EAAA,GAAEE,EAA0BF,EAAA,GAG1DG,GAA2CC,EAAAA,EAAAA,GAAehB,EAAAA,GAAlDiB,EAAQF,EAARE,SAAiBC,EAAaH,EAApBI,MACZC,GAAWC,EAAAA,EAAAA,KAuCjB,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkBC,YAAW,WAAO,IAADC,EAAAC,EAQrCC,EAAAC,EANFC,EAAoDpB,EAAWqB,MAAM,KAAIC,GAAAvB,EAAAA,EAAAA,GAAAqB,EAAA,GAAlEG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAiBG,GAAFH,EAAA,GAAWA,EAAA,IAGR,QAAtCN,EAAAP,EAAsB,OAARe,QAAQ,IAARA,OAAQ,EAARA,EAAUE,sBAAc,IAAAV,GAAtCA,EAAwCO,OACD,QADMN,EAC7CR,EAAuB,OAATgB,QAAS,IAATA,OAAS,EAATA,EAAWC,sBAAc,IAAAT,GAAvCA,EAAyCM,OACvB,kBAAVA,GAERZ,GAASgB,EAAAA,EAAAA,KAAS,IAClBtB,EAvBN,SACEkB,EACAC,EACAC,GAEA,OAAID,EAAWC,IACHF,EAAQE,EAAaD,GAAUI,QAAQ,KAG1CL,EAAQC,EAAWC,GAAWG,QAAQ,EACjD,CAcQC,EACGN,EACqC,QADhCL,EACNT,EAAsB,OAARe,QAAQ,IAARA,OAAQ,EAARA,EAAUE,sBAAc,IAAAR,OAAA,EAAtCA,EAAwCK,MACD,QADMJ,EAC7CV,EAAuB,OAATgB,QAAS,IAATA,OAAS,EAATA,EAAWC,sBAAc,IAAAP,OAAA,EAAvCA,EAAyCI,SAGpCvB,EAAW8B,QACpBnB,GAASgB,EAAAA,EAAAA,KAAS,GAEtB,GAAG,KAEH,OAAO,kBAAMI,aAAajB,EAAiB,CAC7C,GAAG,CAACd,KAGFgC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,yBACZb,MAAOvB,EACPqC,SAAU,SAACC,GAAE,OAAKrC,EAAcqC,EAAGC,OAAOhB,MAAM,IAEjDnB,IAA4BI,GAC3BwB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAc7B,KACf,KAEmB,IAAtBJ,EAAW8B,QAAiBtB,EAAuC,MAA5B0B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBAE1CzB,GAAW0B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBAA2B,OAGhD,G","sources":["appStore/selectors.ts","components/CurrencyConverterPage.tsx"],"sourcesContent":["import { RootState } from \"./RootState\";\n\nexport const availableCurrency = (state: RootState) => state.availableCurrency;\nexport const baseCurrency = (state: RootState) => state.baseCurrency;\n","import React, { useEffect, useState } from \"react\";\nimport { compose } from \"@reduxjs/toolkit\";\nimport { connect } from \"react-redux\";\nimport { useAppDispatch, useAppSelector } from \"../appStore/hooks\";\nimport { availableCurrency } from \"../appStore/selectors\";\nimport { setError } from \"../features/availableCurrency\";\n\n// eslint-disable-next-line react/function-component-definition, import/prefer-default-export\nconst CurrencyChanger = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [avaibleSumAfterExchange, setAvaibleSumAfterExchange] = useState<\n    null | number\n  >(null);\n  const { hasError, items: availableCurr } = useAppSelector(availableCurrency);\n  const dispatch = useAppDispatch();\n  function sumAfterExchange(\n    value: number,\n    firstCur: number,\n    secondCur: number,\n  ) {\n    if (firstCur > secondCur) {\n      return +((value * secondCur) / firstCur).toFixed(2);\n    }\n\n    return +(value * firstCur * secondCur).toFixed(2);\n  }\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const [value, firstCur, assistantWord, secondCur] = searchTerm.split(\" \");\n\n      if (\n        availableCurr[firstCur?.toUpperCase()]?.value &&\n        availableCurr[secondCur?.toUpperCase()]?.value &&\n        typeof +value === \"number\"\n      ) {\n        dispatch(setError(false));\n        setAvaibleSumAfterExchange(\n          sumAfterExchange(\n            +value,\n            availableCurr[firstCur?.toUpperCase()]?.value,\n            availableCurr[secondCur?.toUpperCase()]?.value,\n          ),\n        );\n      } else if (searchTerm.length) {\n        dispatch(setError(true));\n      }\n    }, 2000);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchTerm]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Example: 15 USD in UAH\"\n        value={searchTerm}\n        onChange={(ev) => setSearchTerm(ev.target.value)}\n      />\n      {avaibleSumAfterExchange && !hasError ? (\n        <p>You can get: {avaibleSumAfterExchange}</p>\n      ) : null}\n\n      {searchTerm.length === 0 && !hasError ? <p>Enter your request</p> : null}\n\n      {hasError ? <p>Enter valid currency</p> : null}\n    </div>\n  );\n};\n\n// eslint-disable-next-line prettier/prettier\nexport default compose(connect(null))(\n  CurrencyChanger,\n) as React.ComponentType<any>;\n"],"names":["availableCurrency","state","baseCurrency","compose","connect","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","avaibleSumAfterExchange","setAvaibleSumAfterExchange","_useAppSelector","useAppSelector","hasError","availableCurr","items","dispatch","useAppDispatch","useEffect","delayDebounceFn","setTimeout","_availableCurr$firstC","_availableCurr$second","_availableCurr$firstC2","_availableCurr$second2","_searchTerm$split","split","_searchTerm$split2","value","firstCur","secondCur","toUpperCase","setError","toFixed","sumAfterExchange","length","clearTimeout","_jsxs","children","_jsx","type","placeholder","onChange","ev","target"],"sourceRoot":""}